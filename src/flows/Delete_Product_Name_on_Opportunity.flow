<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>52.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>List_Of_Products</name>
        <label>List Of Products</label>
        <locationX>264</locationX>
        <locationY>503</locationY>
        <assignmentItems>
            <assignToReference>productList</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getProductName</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_all_records</targetReference>
        </connector>
    </assignments>
    <environments>Default</environments>
    <formulas>
        <name>FinalDescription</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!Description}, &apos;&lt;li&gt;&apos;&amp;{!DescriptionRichText}&amp;&apos;&lt;/li&gt;&apos;, &quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>FinalProductName</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!ProductNames}, {!$Record.Product2.Name}, &quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>getProductName</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!productList}), {!Loop_through_all_records.Product2.Name}, {!productList} &amp; &apos;;&apos; &amp; {!Loop_through_all_records.Product2.Name} )</expression>
    </formulas>
    <interviewLabel>Delete Product Name on Opportunity {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Delete Product Name on Opportunity</label>
    <loops>
        <name>Loop_through_all_records</name>
        <label>Loop through all records</label>
        <locationX>176</locationX>
        <locationY>395</locationY>
        <collectionReference>Get_All_Product_Line</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>List_Of_Products</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Remove_Product_name</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_All_Product_Line</name>
        <label>Get All Product Line</label>
        <locationX>176</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_through_all_records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.OpportunityId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OpportunityLineItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Remove_Product_name</name>
        <label>Remove Product name</label>
        <locationX>176</locationX>
        <locationY>695</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.OpportunityId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Products__c</field>
            <value>
                <elementReference>productList</elementReference>
            </value>
        </inputAssignments>
        <object>Opportunity</object>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_All_Product_Line</targetReference>
        </connector>
        <object>OpportunityLineItem</object>
        <recordTriggerType>Delete</recordTriggerType>
        <triggerType>RecordBeforeDelete</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>DescriptionRich</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;{!$Record.Product2.Description}&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>ProductDescription</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;{!$Record.Opportunity.Product_Description__c}&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>Available</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Description</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>DescriptionRichText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>productList</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ProductNames</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
